generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())

  devices DeviceConfiguration[] // relasi one-to-many ke device
}

model DeviceConfiguration {
  deviceId      String   @id // deviceId adalah primary key
  name          String
  topic         String
  type          String
  category      String
  inputtambahan Json?
  userId        Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  mqttBrokerUrl   String?
  mqttBrokerPort  Int?
  mqttToken       String?
  mqttTokenExpiry DateTime?

  user  User                  @relation(fields: [userId], references: [id])
  logsP DeviceLogPublisher[]
  logsS DeviceLogSubscriber[]
  connectionLogs DeviceConnectionLog[]
}

model DeviceLogPublisher {
  id          Int      @id @default(autoincrement())
  deviceId    String
  username    String
  topic       String
  payloadText String?
  payLoadJson Json?
  qos         Int
  timestamp   BigInt
  node        String
  event       String
  createdAt   DateTime @default(now())

  device DeviceConfiguration @relation(fields: [deviceId], references: [deviceId], onDelete: Cascade)
}

model DeviceLogSubscriber {
  id           Int    @id @default(autoincrement())
  fromClientId String
  fromUsername String
  deviceId     String
  username     String
  topic        String
  payloadText  String?
  payLoadJson  Json?
  qos          Int
  timestamp    BigInt
  node         String
  event        String
  createdAt    DateTime @default(now())

  device DeviceConfiguration @relation(fields: [deviceId], references: [deviceId], onDelete: Cascade)
}

model DeviceConnectionLog {
  id          Int      @id @default(autoincrement())
  deviceId    String
  username    String?    // opsional, bisa dari payload
  event       String     // "connected" atau "disconnected"
  reason      String?    // alasan disconnect, misal "normal"
  ipAddress   String?    // dari payload connect
  keepalive   Int?       // dari payload connect
  timestamp   BigInt     // waktu kejadian dari EMQX (epoch ms)
  createdAt   DateTime   @default(now())

  device DeviceConfiguration @relation(fields: [deviceId], references: [deviceId], onDelete: Cascade)
}
